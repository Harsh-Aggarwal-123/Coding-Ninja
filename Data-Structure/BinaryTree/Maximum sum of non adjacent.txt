class Solution
{
    public static Pair maxSumHelper(Node root)
    {
        if (root==null)
        {
            Pair sum=new Pair(0, 0);
            return sum;
        }
        Pair sum1 = maxSumHelper(root.left);
        Pair sum2 = maxSumHelper(root.right);
        Pair sum=new Pair(0,0);
   
        // This node is included (Left and right children
        // are not included)
        sum.first = sum1.second + sum2.second + root.data;
   
        // This node is excluded (Either left or right
        // child is included)
        sum.second = Math.max(sum1.first, sum1.second) +
                     Math.max(sum2.first, sum2.second);
   
        return sum;
    }
    //Function to return the maximum sum of non-adjacent nodes.
    static int getMaxSum(Node root)
    {
        // add your code here
        Pair res=maxSumHelper(root);
        return Math.max(res.first, res.second);
    }
}
class Pair
{
    int first,second;
    Pair(int first,int second)
    {
        this.first=first;
        this.second=second;
    }
}
on
on
